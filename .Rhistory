"team",
"pos",
"salary",
"years",
"total_value",
"avg_annual"))
tidy_mlb <- mlb %>%
separate(years, c("num_years", "year_range"), "\\(") %>%
mutate(year_range = str_remove(year_range, "\\)")) %>%
mutate(salary = parse_number(salary)) %>%
mutate(total_value = parse_number(total_value)) %>%
mutate(avg_annual = parse_number(avg_annual)) %>%
mutate(num_years = parse_number(num_years))
glimpse(tidy_mlb)
## Your code for question 7 goes here
colleges <- read.csv("https://raw.githubusercontent.com/ds4stats/r-tutorials/master/data-wrangling/data/colleges2015.csv")
filtered_colleges <- colleges %>%
filter(region == "Great Lakes" |
region == "Plains") %>%
mutate(total.avg.cost4,
((cost +
(1.03*cost) +
(1.03*1.03*cost) +
(1.03*1.03*1.03*cost)))/4)
colleges <- read.csv("https://raw.githubusercontent.com/ds4stats/r-tutorials/master/data-wrangling/data/colleges2015.csv")
filtered_colleges <- colleges %>%
filter(region == "Great Lakes" |
region == "Plains") %>%
mutate("total.avg.cost4",
((cost +
(1.03*cost) +
(1.03*1.03*cost) +
(1.03*1.03*1.03*cost)))/4)
glimpse(filtered_colleges)
### Add your code here
colleges <- read.csv("https://raw.githubusercontent.com/ds4stats/r-tutorials/master/data-wrangling/data/colleges2015.csv")
filtered_colleges <- colleges %>%
filter(region == "Great Lakes" |
region == "Plains") %>%
mutate(total.avg.cost4 =
((cost +
(1.03*cost) +
(1.03*1.03*cost) +
(1.03*1.03*1.03*cost)))/4)
glimpse(filtered_colleges)
### Add your code here
colleges <- read.csv("https://raw.githubusercontent.com/ds4stats/r-tutorials/master/data-wrangling/data/colleges2015.csv")
filtered_colleges <- colleges %>%
filter(region == "Great Lakes" |
region == "Plains") %>%
mutate(total.avg.cost4 =
((cost +
(1.03*cost) +
(1.03*1.03*cost) +
(1.03*1.03*1.03*cost)))/4)
head(filtered_colleges, total.avg.cost4)
colleges <- read.csv("https://raw.githubusercontent.com/ds4stats/r-tutorials/master/data-wrangling/data/colleges2015.csv")
filtered_colleges <- colleges %>%
filter(region == "Great Lakes" |
region == "Plains") %>%
mutate(total.avg.cost4 =
((cost +
(1.03*cost) +
(1.03*1.03*cost) +
(1.03*1.03*1.03*cost)))/4)
filter_colleges %>% select(total.avg.cost4) %>%
head(6)
colleges <- read.csv("https://raw.githubusercontent.com/ds4stats/r-tutorials/master/data-wrangling/data/colleges2015.csv")
filtered_colleges <- colleges %>%
filter(region == "Great Lakes" |
region == "Plains") %>%
mutate(total.avg.cost4 =
((cost +
(1.03*cost) +
(1.03*1.03*cost) +
(1.03*1.03*1.03*cost)))/4)
filtered_colleges %>% select(total.avg.cost4) %>%
head(6)
### Add your code here
View(filtered_colleges)
View(colleges)
colleges <- read.csv("https://raw.githubusercontent.com/ds4stats/r-tutorials/master/data-wrangling/data/colleges2015.csv")
colleges2 <- colleges[complete.cases(colleges),] ## Subsets the data to include only colleges w/ no missing data
cor(colleges2$cost, colleges2$debt) ## The cor function finds the correlation coefficient between the two variables
ggplot(colleges2, aes(x = cost, y = debt, col = type)) + geom_point() ## Plot by type
### Add your code here
View(colleges2)
colleges <- read.csv("https://raw.githubusercontent.com/ds4stats/r-tutorials/master/data-wrangling/data/colleges2015.csv")
colleges2 <- colleges[complete.cases(colleges),] ## Subsets the data to include only colleges w/ no missing data
cor(colleges2$cost, colleges2$debt) ## The cor function finds the correlation coefficient between the two variables
ggplot(colleges2, aes(x = cost, y = debt, col = type)) + geom_point() ## Plot by type
### Add your code here
colleges2 %>%
group_by(type) %>%
summarize()
colleges <- read.csv("https://raw.githubusercontent.com/ds4stats/r-tutorials/master/data-wrangling/data/colleges2015.csv")
colleges2 <- colleges[complete.cases(colleges),] ## Subsets the data to include only colleges w/ no missing data
cor(colleges2$cost, colleges2$debt) ## The cor function finds the correlation coefficient between the two variables
ggplot(colleges2, aes(x = cost, y = debt, col = type)) + geom_point() ## Plot by type
### Add your code here
colleges2 %>%
group_by(type) %>%
summary()
colleges <- read.csv("https://raw.githubusercontent.com/ds4stats/r-tutorials/master/data-wrangling/data/colleges2015.csv")
colleges2 <- colleges[complete.cases(colleges),] ## Subsets the data to include only colleges w/ no missing data
cor(colleges2$cost, colleges2$debt) ## The cor function finds the correlation coefficient between the two variables
ggplot(colleges2, aes(x = cost, y = debt, col = type)) + geom_point() ## Plot by type
### Add your code here
colleges2 %>%
group_by(type) %>%
cor(cost, debt)
colleges <- read.csv("https://raw.githubusercontent.com/ds4stats/r-tutorials/master/data-wrangling/data/colleges2015.csv")
colleges2 <- colleges[complete.cases(colleges),] ## Subsets the data to include only colleges w/ no missing data
cor(colleges2$cost, colleges2$debt) ## The cor function finds the correlation coefficient between the two variables
ggplot(colleges2, aes(x = cost, y = debt, col = type)) + geom_point() ## Plot by type
summarize(colleges2)
### Add your code here
colleges2 %>%
group_by(type)
colleges <- read.csv("https://raw.githubusercontent.com/ds4stats/r-tutorials/master/data-wrangling/data/colleges2015.csv")
colleges2 <- colleges[complete.cases(colleges),] ## Subsets the data to include only colleges w/ no missing data
cor(colleges2$cost, colleges2$debt) ## The cor function finds the correlation coefficient between the two variables
ggplot(colleges2, aes(x = cost, y = debt, col = type)) + geom_point() ## Plot by type
summary(colleges2)
### Add your code here
colleges2 %>%
group_by(type)
colleges <- read.csv("https://raw.githubusercontent.com/ds4stats/r-tutorials/master/data-wrangling/data/colleges2015.csv")
colleges2 <- colleges[complete.cases(colleges),] ## Subsets the data to include only colleges w/ no missing data
cor(colleges2$cost, colleges2$debt) ## The cor function finds the correlation coefficient between the two variables
ggplot(colleges2, aes(x = cost, y = debt, col = type)) + geom_point() ## Plot by type
summary(colleges2)
### Add your code here
colleges2 %>%
group_by(type) %>%
summarize(cor(cost, debt))
colleges <- read.csv("https://raw.githubusercontent.com/ds4stats/r-tutorials/master/data-wrangling/data/colleges2015.csv")
colleges2 <- colleges[complete.cases(colleges),] ## Subsets the data to include only colleges w/ no missing data
cor(colleges2$cost, colleges2$debt) ## The cor function finds the correlation coefficient between the two variables
ggplot(colleges2, aes(x = cost, y = debt, col = type)) + geom_point() ## Plot by type
summary(colleges2)
### Add your code here
colleges2 %>%
group_by(type) %>%
summarize(cor(cost, debt))
colleges <- read.csv("https://raw.githubusercontent.com/ds4stats/r-tutorials/master/data-wrangling/data/colleges2015.csv")
colleges2 <- colleges[complete.cases(colleges),] ## Subsets the data to include only colleges w/ no missing data
cor(colleges2$cost, colleges2$debt) ## The cor function finds the correlation coefficient between the two variables
ggplot(colleges2, aes(x = cost, y = debt, col = type)) + geom_point() ## Plot by type
summary(colleges2)
### Add your code here
colleges2 %>%
group_by(type) %>%
summarize(cor(cost, debt))
library(tidyverse)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
ubs <- read.csv('https://raw.githubusercontent.com/ds4stats/r-tutorials/master/tidying-data/data/UBSprices2.csv')
## Your code for question 8 goes here
View(ubs)
ubs <- read.csv('https://raw.githubusercontent.com/ds4stats/r-tutorials/master/tidying-data/data/UBSprices2.csv')
tidy_ubs <- ubs %>%
pivot_longer(
cols = bigmac2009:rice2003,
names_to = "food_item",
values_to = "cost"
)
library(tidyverse)
library(dplyr)
ubs <- read.csv('https://raw.githubusercontent.com/ds4stats/r-tutorials/master/tidying-data/data/UBSprices2.csv')
tidy_ubs <- ubs %>%
pivot_longer(
cols = bigmac2009:rice2003,
names_to = "food",
values_to = "cost"
)
glimpse(tidy_ubs)
## Your code for question 8 goes here
View(tidy_ubs)
ubs <- read.csv('https://raw.githubusercontent.com/ds4stats/r-tutorials/master/tidying-data/data/UBSprices2.csv')
tidy_ubs <- ubs %>%
pivot_longer(
cols = bigmac2009:rice2003,
names_to = "food",
values_to = "cost"
) %>%
separate(food, c("food","year"), "2")
glimpse(tidy_ubs)
## Your code for question 8 goes here
ubs <- read.csv('https://raw.githubusercontent.com/ds4stats/r-tutorials/master/tidying-data/data/UBSprices2.csv') %>%
janitor::clean_names()
tidy_ubs <- ubs %>%
pivot_longer(
cols = bigmac2009:rice2003,
names_to = "food",
values_to = "cost"
) %>%
separate(food, c("food","year"), "2")
glimpse(tidy_ubs)
## Your code for question 8 goes here
View(ubs)
ubs <- read.csv('https://raw.githubusercontent.com/ds4stats/r-tutorials/master/tidying-data/data/UBSprices2.csv')
tidy_ubs <- ubs %>%
pivot_longer(
cols = bigmac2009:rice2003,
names_to = "food",
values_to = "cost"
) %>%
separate(food, c("food","year"))
glimpse(tidy_ubs)
## Your code for question 8 goes here
ubs <- read.csv('https://raw.githubusercontent.com/ds4stats/r-tutorials/master/tidying-data/data/UBSprices2.csv')
tidy_ubs <- ubs %>%
pivot_longer(
cols = bigmac2009:rice2003,
names_to = "food",
values_to = "cost"
) %>%
separate(food, c("food","year")) %>%
mutate(year = parse_number(year))
glimpse(tidy_ubs)
## Your code for question 8 goes here
?separate
ubs <- read.csv('https://raw.githubusercontent.com/ds4stats/r-tutorials/master/tidying-data/data/UBSprices2.csv')
tidy_ubs <- ubs %>%
pivot_longer(
cols = bigmac2009:rice2003,
names_to = "food",
values_to = "cost"
) %>%
separate(food, c("food","year"), "2")
glimpse(tidy_ubs)
## Your code for question 8 goes here
ubs <- read.csv('https://raw.githubusercontent.com/ds4stats/r-tutorials/master/tidying-data/data/UBSprices2.csv')
tidy_ubs <- ubs %>%
pivot_longer(
cols = bigmac2009:rice2003,
names_to = "food",
values_to = "cost"
) %>%
separate(food, c("food","year"), "2"-1)
ubs <- read.csv('https://raw.githubusercontent.com/ds4stats/r-tutorials/master/tidying-data/data/UBSprices2.csv')
tidy_ubs <- ubs %>%
pivot_longer(
cols = bigmac2009:rice2003,
names_to = "food",
values_to = "cost"
) %>%
separate(food, c("food","year"), "\\2")
ubs <- read.csv('https://raw.githubusercontent.com/ds4stats/r-tutorials/master/tidying-data/data/UBSprices2.csv')
tidy_ubs <- ubs %>%
pivot_longer(
cols = bigmac2009:rice2003,
names_to = "food",
values_to = "cost"
) %>%
separate(food, c("food","year"), "2")
glimpse(tidy_ubs)
## Your code for question 8 goes here
ubs <- read.csv('https://raw.githubusercontent.com/ds4stats/r-tutorials/master/tidying-data/data/UBSprices2.csv')
tidy_ubs <- ubs %>%
pivot_longer(
cols = bigmac2009:rice2003,
names_to = "food",
values_to = "cost"
) %>%
separate(food, c("food","year"), "(?<=[a-z]) ?(?=[0-9])")
glimpse(tidy_ubs)
## Your code for question 8 goes here
ubs <- read.csv('https://raw.githubusercontent.com/ds4stats/r-tutorials/master/tidying-data/data/UBSprices2.csv')
tidy_ubs <- ubs %>%
pivot_longer(
cols = bigmac2009:rice2003,
names_to = "food",
values_to = "cost"
) %>%
separate(food, c("food","year"), "(?<=[a-z]) ?(?=[0-9])") %>%
mutate(as.numeric(year))
glimpse(tidy_ubs)
ubs <- read.csv('https://raw.githubusercontent.com/ds4stats/r-tutorials/master/tidying-data/data/UBSprices2.csv')
tidy_ubs <- ubs %>%
pivot_longer(
cols = bigmac2009:rice2003,
names_to = "food",
values_to = "cost"
) %>%
separate(food, c("food","year"), "(?<=[a-z]) ?(?=[0-9])") %>%
mutate(year = as.numeric(year))
glimpse(tidy_ubs)
mlb <- read.csv('https://raw.githubusercontent.com/ds4stats/r-tutorials/master/tidying-data/data/mlb2016.csv',
col.names = c("name",
"team",
"pos",
"salary",
"years",
"total_value",
"avg_annual"))
tidy_mlb <- mlb %>%
separate(years, c("num_years", "year_range"), "\\(") %>%
mutate(year_range = str_remove(year_range, "\\)")) %>%
mutate(salary = parse_number(salary)) %>%
mutate(total_value = parse_number(total_value)) %>%
mutate(avg_annual = parse_number(avg_annual)) %>%
mutate(num_years = as.numeric(num_years))
glimpse(tidy_mlb)
## Your code for question 7 goes here
ubs <- read.csv('https://raw.githubusercontent.com/ds4stats/r-tutorials/master/tidying-data/data/UBSprices2.csv')
tidy_ubs <- ubs %>%
pivot_longer(
cols = bigmac2009:rice2003,
names_to = "food_year",
values_to = "cost"
) %>%
separate(food_year, c("food","year"), "(?<=[a-z]) ?(?=[0-9])") %>%
mutate(year = as.numeric(year))
glimpse(tidy_ubs)
colleges <- read.csv("https://raw.githubusercontent.com/ds4stats/r-tutorials/master/data-wrangling/data/colleges2015.csv")
filtered_colleges <- colleges %>%
filter(region == "Great Lakes" |
region == "Plains") %>%
mutate(total.avg.cost4 =
((cost +
(1.03*cost) +
(1.03*1.03*cost) +
(1.03*1.03*1.03*cost)))/4)
glimpse(filtered_colleges)
filtered_colleges %>% select(total.avg.cost4) %>%
head(6)
#
ggplot(homesales,
aes(x = log2(sale.amount))) +
geom_histogram(binwidth = 0.1) +
labs(title = "Histogram of Log Base 2 of Sales Amounts",
x = "Log Base 2 of Sales Amount",
y = "Count")
homesales <- read.csv('https://remiller1450.github.io/data/IowaCityHomeSales.csv')
mysubset <- homesales[homesales$bedrooms >= 4,] ## This is now correct
#
ggplot(homesales,
aes(x = log2(sale.amount))) +
geom_histogram(binwidth = 0.1) +
labs(title = "Histogram of Log Base 2 of Sales Amounts",
x = "Log Base 2 of Sales Amount",
y = "Count")
#
ggplot(homesales,
aes(x = log2(sale.amount)),
color = "lightblue") +
geom_histogram(binwidth = 0.1) +
labs(title = "Histogram of Log Base 2 of Sales Amounts",
x = "Log Base 2 of Sales Amount",
y = "Count")
#
ggplot(homesales,
aes(x = log2(sale.amount)),
fill = "lightblue") +
geom_histogram(binwidth = 0.1) +
labs(title = "Histogram of Log Base 2 of Sales Amounts",
x = "Log Base 2 of Sales Amount",
y = "Count")
#
ggplot(homesales,
aes(x = log2(sale.amount))) +
geom_histogram(binwidth = 0.1,
color = "yellow") +
labs(title = "Histogram of Log Base 2 of Sales Amounts",
x = "Log Base 2 of Sales Amount",
y = "Count")
#
ggplot(homesales,
aes(x = log2(sale.amount))) +
geom_histogram(binwidth = 0.1,
fill = "yellow") +
labs(title = "Histogram of Log Base 2 of Sales Amounts",
x = "Log Base 2 of Sales Amount",
y = "Count")
#
ggplot(homesales,
aes(x = log2(sale.amount))) +
geom_histogram(binwidth = 0.1,
fill = "lightblue") +
labs(title = "Histogram of Log Base 2 of Sales Amounts",
x = "Log Base 2 of Sales Amount",
y = "Count")
#
ggplot(homesales,
aes(x = log2(sale.amount))) +
geom_histogram(binwidth = 0.2,
fill = "lightblue") +
labs(title = "Histogram of Log Base 2 of Sales Amounts",
x = "Log Base 2 of Sales Amount",
y = "Count")
#
ggplot(homesales,
aes(x = log2(sale.amount))) +
geom_histogram(binwidth = 0.1,
fill = "lightblue") +
labs(title = "Histogram of Log Base 2 of Sales Amounts",
x = "Log Base 2 of Sales Amount",
y = "Count")
View(colleges)
# Read colleges2015.csv into colleges
colleges <- read.csv("https://raw.githubusercontent.com/ds4stats/r-tutorials/master/data-wrangling/data/colleges2015.csv")
# Filter for colleges in the Great Lakes and Plains region
# Create new column that contains 4-year cost with interest
filtered_colleges <- colleges %>%
filter(region == "Great Lakes" |
region == "Plains") %>%
mutate(total.avg.cost4 =
((cost +
(1.03*cost) +
(1.03*1.03*cost) +
(1.03*1.03*1.03*cost))))
# Prints the first 6 values of total.avg.cost4
filtered_colleges %>% select(total.avg.cost4) %>%
head(6)
# Read colleges2015.csv into colleges
colleges <- read.csv("https://raw.githubusercontent.com/ds4stats/r-tutorials/master/data-wrangling/data/colleges2015.csv")
f_colleges <- colleges %>%
filter(region == "Great Lakes" |
region == "Plains")
glimpse(f_colleges)
# Filter for colleges in the Great Lakes and Plains region
# Create new column that contains 4-year cost with interest
filtered_colleges <- colleges %>%
filter(region == "Great Lakes" |
region == "Plains") %>%
mutate(total.avg.cost4 =
((cost +
(1.03*cost) +
(1.03*1.03*cost) +
(1.03*1.03*1.03*cost))))
# Prints the first 6 values of total.avg.cost4
filtered_colleges %>%
select(total.avg.cost4) %>%
head(6)
# Read colleges2015.csv into colleges
colleges <- read.csv("https://raw.githubusercontent.com/ds4stats/r-tutorials/master/data-wrangling/data/colleges2015.csv")
f_colleges <- colleges %>%
filter(region == "Great Lakes" |
region == "Plains")
View(f_colleges)
# Filter for colleges in the Great Lakes and Plains region
# Create new column that contains 4-year cost with interest
filtered_colleges <- colleges %>%
filter(region == "Great Lakes" |
region == "Plains") %>%
mutate(total.avg.cost4 =
((cost +
(1.03*cost) +
(1.03*1.03*cost) +
(1.03*1.03*1.03*cost))))
# Prints the first 6 values of total.avg.cost4
filtered_colleges %>%
select(total.avg.cost4) %>%
head(6)
# Read colleges2015.csv into colleges
colleges <- read.csv("https://raw.githubusercontent.com/ds4stats/r-tutorials/master/data-wrangling/data/colleges2015.csv")
# Filter for colleges in the Great Lakes and Plains region
# Create new column that contains 4-year cost with interest
filtered_colleges <- colleges %>%
filter(region == "Great Lakes" |
region == "Plains") %>%
mutate(total.avg.cost4 =
((cost +
(1.03*cost) +
(1.03*1.03*cost) +
(1.03*1.03*1.03*cost))))
# Prints the first 6 values of total.avg.cost4
filtered_colleges %>%
select(total.avg.cost4) %>%
head(6)
shiny::runApp('Grinnell College/Semester 5/Data Science/Chicago_Crimes')
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Chicago Crimes"),
# Sidebar with inputs to choose specific crimes
sidebarLayout(
sidebarPanel(
# Selecter input to choose the primary description of the crime
selectInput("primary",
label = "Choose a Primary Description of the Crime",
choices = primary_descr,
selected = "Primary Description"),
dateRangeInput("daterange", "Date range:",
start = "2020-09-15",
end   = "2021-09-14"),
sliderInput("timerange", "Time Range:",
timezone = "CST",
min = as.POSIXct("2017-01-01 18:00:00"),
max = as.POSIXct("2017-01-02 17:59:59"),
value = as.POSIXct(c("2017-01-01 18:00:00", "2017-01-02 17:59:59")),
timeFormat="%H:%M:%S",
step = 3600),
),
leafletOutput("map")
)
)
shiny::runApp('Grinnell College/Semester 5/Data Science/Chicago_Crimes')
month_order <- c("09/2020",
"09/2020",
"09/2020",
"09/2020",)
runApp('Grinnell College/Semester 5/Data Science/Chicago_Crimes')
shiny::runApp('Grinnell College/Semester 5/Data Science/Chicago_Crimes')
shiny::runApp('Grinnell College/Semester 5/Data Science/Chicago_Crimes')
setwd("~/Grinnell College/Semester 5/Data Science/Chicago_Crimes")
source("~/Grinnell College/Semester 5/Data Science/Chicago_Crimes/clean_chicago_crimes.R")
source("~/Grinnell College/Semester 5/Data Science/Chicago_Crimes/clean_chicago_crimes.R")
View(chicago_crimes)
shiny::runApp()
